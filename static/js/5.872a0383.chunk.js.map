{"version":3,"sources":["components/Button/Button.js","components/Input/InputText.js","pages/Login/Login.js"],"names":["Button","props","text","onClick","disabled","className","classes","InputText","onChange","e","value","target","maxLength","errorMsg","length","regexValidation","regexErrorMsg","setState","name","invalid","onKeyPress","onClear","regex","match","state","defaultValue","this","label","isRequire","isReset","isClear","titleReset","titleClear","type","placeholder","htmlFor","id","title","onReset","nextProps","prevState","PureComponent","Login","obj","handleSubmit","data","username","password","auth","login","location","from","window","hash","pathname","reload","err","error","redirectToRefer","to"],"mappings":"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","file":"static/js/5.872a0383.chunk.js","sourcesContent":["import React from 'react';\nimport './Button.scss';\n\nconst Button = (props) => {\n  const { text, onClick, disabled = false } = props;\n  const className = props.className ? props.className : 'btn-success';\n  const classes = `btn ${className}`;\n\n  return (\n    <button className={'btn ' + classes} onClick={onClick} disabled={disabled}>\n      {text}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { PureComponent } from 'react';\nimport './Input.scss';\n\nconst DEFAULT_INPUT_MAX_LENGTH = 200;\n\n/**\n * InputText có 2 cơ chế setValue:\n * 1. Dùng state bên trong nó, khi user nhập thì value sẽ được thay đổi qua hàm onChange\n * 2. defaultValue được pass từ parent. Nếu defaultValue thay đổi thì value của\n *    nó cũng sẽ thay đổi theo dựa vào method getDerivedStateFromProps\n * Note: thực sự ko nên có getDerivedStateFromProps, vì như vậy logic code sẽ phức tạp.\n * Sau đây là 1 case dùng getDerivedStateFromProps:\n * Method onReset sẽ ko change state value, mà gọi method onReset của parent, parent sau đó\n * change state 'abcde' của nó, sau đó lại rerender lại và lại truyền 'abcde' đó\n * cho component này, nhờ có getDerivedStateFromProps nên value của nó sẽ được set lại\n */\nclass InputText extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: props.defaultValue ? props.defaultValue : '',\n      errorMsg: ''\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.defaultValue !== prevState.value) {\n      return { value: nextProps.defaultValue };\n    }\n    return null;\n  }\n\n  onChange = (e) => {\n    const { value } = e.target;\n    const maxLength = this.props.maxLength ? this.props.maxLength : DEFAULT_INPUT_MAX_LENGTH;\n    let errorMsg = '';\n\n    if (value.length > maxLength) {\n      errorMsg = 'Max length of input is: ' + maxLength;\n    } else if (!this.regexValidation(value)) {\n      errorMsg = this.props.regexErrorMsg ? this.props.regexErrorMsg : 'Input is invalid';\n    }\n\n    this.setState({\n      value,\n      errorMsg\n    });\n\n    this.props.onChange({\n      name: this.props.name,\n      value,\n      invalid: !!errorMsg\n    });\n  };\n\n  onKeyPress = (e) => {\n    const { onKeyPress } = this.props;\n    if (onKeyPress) {\n      onKeyPress(e);\n    }\n  };\n\n  onClear = () => {\n    this.setState({\n      value: '',\n      errorMsg: ''\n    });\n    this.props.onClear({\n      name: this.props.name,\n      value: '',\n      invalid: false\n    });\n  };\n\n  regexValidation = (value) => {\n    const regex = this.props.regex ? this.props.regex : '';\n    if (value === '' || regex === '') return true;\n    return value.match(regex);\n  };\n\n  render() {\n    const {\n      name,\n      label,\n      className = '',\n      disabled = false,\n      isRequire = false,\n      isReset = false, // reset value of input to a value that specified by parent\n      isClear = false, // clear value: set = empty\n      titleReset = '',\n      titleClear = '',\n      type = 'text',\n      maxLength = '',\n      placeholder\n    } = this.props;\n\n    const { value, errorMsg } = this.state;\n\n    return (\n      <div className={`input-wrapper ${className}`}>\n        {label && (\n          <label className=\"input-label\" htmlFor={`id-txt-${name}`}>\n            {label}\n            {isRequire && <span className=\"input-require\">&nbsp;*</span>}\n          </label>\n        )}\n        <div className=\"input-text-wrapper\">\n          <input\n            id={`id-txt-${name}`}\n            type={type}\n            name={name}\n            value={value}\n            title={disabled ? value : ''}\n            disabled={disabled}\n            onChange={this.onChange}\n            className={'input-text' + (!!errorMsg ? ' input-error' : '')}\n            placeholder={placeholder}\n            onKeyPress={this.onKeyPress}\n            maxLength={maxLength}\n          />\n          {isReset && (\n            <i\n              className=\"fa fa-refresh icon-btn-action icon-btn-edit\"\n              onClick={this.props.onReset}\n              title={titleReset ? titleReset : 'Reset'}\n            ></i>\n          )}\n          {isClear && (\n            <i\n              className=\"fa fa-trash icon-btn-action icon-btn-edit\"\n              onClick={this.onClear}\n              title={titleClear ? titleClear : 'Clear'}\n            ></i>\n          )}\n        </div>\n        {!!errorMsg && <div className=\"input-error-msg\">{errorMsg}</div>}\n      </div>\n    );\n  }\n}\n\nexport default InputText;\n","import React, { PureComponent } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Button from '../../components/Button/Button';\nimport InputText from '../../components/Input/InputText';\nimport { auth } from '../../components/Auth/Auth';\nimport './Login.scss';\n\nclass Login extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      error: false,\n      redirectToRefer: false\n    };\n    this.from = { pathname: '/' };\n  }\n\n  onChange = (obj) => {\n    this.setState({\n      [obj.name]: obj.value\n    });\n  };\n\n  handleSubmit = () => {\n    const { username, password } = this.state;\n    const data = {\n      username,\n      password\n    };\n    auth.login(\n      data,\n      () => {\n        if (this.props.location.state) {\n          this.from = this.props.location.state.from;\n        }\n        window.location.hash = this.from.pathname;\n\n        // reload to rerender Nav (some menu could be displayed only after login)\n        window.location.reload();\n      },\n      (err) => {\n        // Lỗi này API return status = 401, đã xử lý bên axios.interceptors rồi\n        // Toast.error(err);\n      }\n    );\n  };\n\n  render() {\n    const { username, password, redirectToRefer } = this.state;\n\n    if (redirectToRefer) {\n      return <Redirect to={this.from} />;\n    }\n\n    return (\n      <div className=\"login-wrapper\">\n        <h2 className=\"login-header\">Login</h2>\n        <InputText label=\"Username\" name=\"username\" value={username} onChange={this.onChange} />\n        <InputText\n          label=\"Password\"\n          name=\"password\"\n          value={password}\n          onChange={this.onChange}\n          type=\"password\"\n        />\n        <Button text=\"Login\" onClick={this.handleSubmit} />\n      </div>\n    );\n  }\n}\n\nexport default Login;\n"],"sourceRoot":""}